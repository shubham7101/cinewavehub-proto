// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.1
// source: scraper/scraper_common.proto

package scraper

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{0}
}

type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server    string                 `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	ServerId  string                 `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Language  string                 `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{1}
}

func (x *Server) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *Server) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *Server) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Server) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type ServersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servers []*Server `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
}

func (x *ServersResponse) Reset() {
	*x = ServersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServersResponse) ProtoMessage() {}

func (x *ServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServersResponse.ProtoReflect.Descriptor instead.
func (*ServersResponse) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{2}
}

func (x *ServersResponse) GetServers() []*Server {
	if x != nil {
		return x.Servers
	}
	return nil
}

type ServersInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servers   *ServersResponse       `protobuf:"bytes,1,opt,name=servers,proto3" json:"servers,omitempty"`
	Other     bool                   `protobuf:"varint,2,opt,name=other,proto3" json:"other,omitempty"`
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *ServersInfo) Reset() {
	*x = ServersInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServersInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServersInfo) ProtoMessage() {}

func (x *ServersInfo) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServersInfo.ProtoReflect.Descriptor instead.
func (*ServersInfo) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{3}
}

func (x *ServersInfo) GetServers() *ServersResponse {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *ServersInfo) GetOther() bool {
	if x != nil {
		return x.Other
	}
	return false
}

func (x *ServersInfo) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type ServerMappings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServersMappings map[string]*ServersInfo `protobuf:"bytes,1,rep,name=servers_mappings,json=serversMappings,proto3" json:"servers_mappings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ServerMappings) Reset() {
	*x = ServerMappings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMappings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMappings) ProtoMessage() {}

func (x *ServerMappings) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMappings.ProtoReflect.Descriptor instead.
func (*ServerMappings) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{4}
}

func (x *ServerMappings) GetServersMappings() map[string]*ServersInfo {
	if x != nil {
		return x.ServersMappings
	}
	return nil
}

type Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	IsM3U8   bool   `protobuf:"varint,2,opt,name=is_m3u8,json=isM3u8,proto3" json:"is_m3u8,omitempty"`
	Type     string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Language string `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	Format   string `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
	Bitrate  string `protobuf:"bytes,6,opt,name=bitrate,proto3" json:"bitrate,omitempty"`
}

func (x *Source) Reset() {
	*x = Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{5}
}

func (x *Source) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Source) GetIsM3U8() bool {
	if x != nil {
		return x.IsM3U8
	}
	return false
}

func (x *Source) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Source) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Source) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *Source) GetBitrate() string {
	if x != nil {
		return x.Bitrate
	}
	return ""
}

type Subtitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url  string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Lang string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	Kind string `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
}

func (x *Subtitle) Reset() {
	*x = Subtitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subtitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subtitle) ProtoMessage() {}

func (x *Subtitle) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subtitle.ProtoReflect.Descriptor instead.
func (*Subtitle) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{6}
}

func (x *Subtitle) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Subtitle) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Subtitle) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

type Timer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   uint32 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Timer) Reset() {
	*x = Timer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timer) ProtoMessage() {}

func (x *Timer) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timer.ProtoReflect.Descriptor instead.
func (*Timer) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{7}
}

func (x *Timer) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Timer) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

type SourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Server   string `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	ServerId string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *SourcesRequest) Reset() {
	*x = SourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourcesRequest) ProtoMessage() {}

func (x *SourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourcesRequest.ProtoReflect.Descriptor instead.
func (*SourcesRequest) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{8}
}

func (x *SourcesRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SourcesRequest) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *SourcesRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type SourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sources       []*Source         `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
	Subtitles     []*Subtitle       `protobuf:"bytes,2,rep,name=subtitles,proto3" json:"subtitles,omitempty"`
	Poster        string            `protobuf:"bytes,3,opt,name=poster,proto3" json:"poster,omitempty"`
	Thumbnail     string            `protobuf:"bytes,4,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	ThumbnailType string            `protobuf:"bytes,5,opt,name=thumbnail_type,json=thumbnailType,proto3" json:"thumbnail_type,omitempty"`
	Flags         []Flag            `protobuf:"varint,6,rep,packed,name=flags,proto3,enum=cinewavehub.scraper.Flag" json:"flags,omitempty"`
	Intro         *Timer            `protobuf:"bytes,7,opt,name=intro,proto3" json:"intro,omitempty"`
	Outro         *Timer            `protobuf:"bytes,8,opt,name=outro,proto3" json:"outro,omitempty"`
	ProxySettings map[string]string `protobuf:"bytes,9,rep,name=ProxySettings,proto3" json:"ProxySettings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SourcesResponse) Reset() {
	*x = SourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourcesResponse) ProtoMessage() {}

func (x *SourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourcesResponse.ProtoReflect.Descriptor instead.
func (*SourcesResponse) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{9}
}

func (x *SourcesResponse) GetSources() []*Source {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *SourcesResponse) GetSubtitles() []*Subtitle {
	if x != nil {
		return x.Subtitles
	}
	return nil
}

func (x *SourcesResponse) GetPoster() string {
	if x != nil {
		return x.Poster
	}
	return ""
}

func (x *SourcesResponse) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *SourcesResponse) GetThumbnailType() string {
	if x != nil {
		return x.ThumbnailType
	}
	return ""
}

func (x *SourcesResponse) GetFlags() []Flag {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *SourcesResponse) GetIntro() *Timer {
	if x != nil {
		return x.Intro
	}
	return nil
}

func (x *SourcesResponse) GetOutro() *Timer {
	if x != nil {
		return x.Outro
	}
	return nil
}

func (x *SourcesResponse) GetProxySettings() map[string]string {
	if x != nil {
		return x.ProxySettings
	}
	return nil
}

type VideoDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width     int32    `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height    int32    `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Duration  float32  `protobuf:"fixed32,3,opt,name=duration,proto3" json:"duration,omitempty"`
	FrameRate float32  `protobuf:"fixed32,4,opt,name=frame_rate,json=frameRate,proto3" json:"frame_rate,omitempty"`
	Audios    []string `protobuf:"bytes,5,rep,name=audios,proto3" json:"audios,omitempty"`
	Subtitles []string `protobuf:"bytes,6,rep,name=subtitles,proto3" json:"subtitles,omitempty"`
}

func (x *VideoDetail) Reset() {
	*x = VideoDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoDetail) ProtoMessage() {}

func (x *VideoDetail) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoDetail.ProtoReflect.Descriptor instead.
func (*VideoDetail) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{10}
}

func (x *VideoDetail) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *VideoDetail) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VideoDetail) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *VideoDetail) GetFrameRate() float32 {
	if x != nil {
		return x.FrameRate
	}
	return 0
}

func (x *VideoDetail) GetAudios() []string {
	if x != nil {
		return x.Audios
	}
	return nil
}

func (x *VideoDetail) GetSubtitles() []string {
	if x != nil {
		return x.Subtitles
	}
	return nil
}

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link  string `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	Flags []Flag `protobuf:"varint,2,rep,packed,name=flags,proto3,enum=cinewavehub.scraper.Flag" json:"flags,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{11}
}

func (x *Link) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Link) GetFlags() []Flag {
	if x != nil {
		return x.Flags
	}
	return nil
}

type DownloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName    string       `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Direct      []*Link      `protobuf:"bytes,2,rep,name=direct,proto3" json:"direct,omitempty"`
	External    []*Link      `protobuf:"bytes,3,rep,name=external,proto3" json:"external,omitempty"`
	Size        int32        `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Type        string       `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	VideoDetail *VideoDetail `protobuf:"bytes,6,opt,name=video_detail,json=videoDetail,proto3" json:"video_detail,omitempty"`
}

func (x *DownloadResponse) Reset() {
	*x = DownloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadResponse) ProtoMessage() {}

func (x *DownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadResponse.ProtoReflect.Descriptor instead.
func (*DownloadResponse) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{12}
}

func (x *DownloadResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *DownloadResponse) GetDirect() []*Link {
	if x != nil {
		return x.Direct
	}
	return nil
}

func (x *DownloadResponse) GetExternal() []*Link {
	if x != nil {
		return x.External
	}
	return nil
}

func (x *DownloadResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DownloadResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DownloadResponse) GetVideoDetail() *VideoDetail {
	if x != nil {
		return x.VideoDetail
	}
	return nil
}

type MappingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PostId string  `protobuf:"bytes,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Title  string  `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Ratio  float64 `protobuf:"fixed64,4,opt,name=ratio,proto3" json:"ratio,omitempty"`
	Url    string  `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Other  bool    `protobuf:"varint,6,opt,name=other,proto3" json:"other,omitempty"`
}

func (x *MappingInfo) Reset() {
	*x = MappingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappingInfo) ProtoMessage() {}

func (x *MappingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappingInfo.ProtoReflect.Descriptor instead.
func (*MappingInfo) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{13}
}

func (x *MappingInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MappingInfo) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *MappingInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MappingInfo) GetRatio() float64 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

func (x *MappingInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MappingInfo) GetOther() bool {
	if x != nil {
		return x.Other
	}
	return false
}

type MappingsEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string         `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []*MappingInfo `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *MappingsEntry) Reset() {
	*x = MappingsEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappingsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappingsEntry) ProtoMessage() {}

func (x *MappingsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappingsEntry.ProtoReflect.Descriptor instead.
func (*MappingsEntry) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{14}
}

func (x *MappingsEntry) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MappingsEntry) GetValue() []*MappingInfo {
	if x != nil {
		return x.Value
	}
	return nil
}

type Mappings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mappings []*MappingsEntry `protobuf:"bytes,1,rep,name=mappings,proto3" json:"mappings,omitempty"`
}

func (x *Mappings) Reset() {
	*x = Mappings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mappings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mappings) ProtoMessage() {}

func (x *Mappings) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mappings.ProtoReflect.Descriptor instead.
func (*Mappings) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{15}
}

func (x *Mappings) GetMappings() []*MappingsEntry {
	if x != nil {
		return x.Mappings
	}
	return nil
}

type Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Other bool   `protobuf:"varint,3,opt,name=other,proto3" json:"other,omitempty"`
}

func (x *Provider) Reset() {
	*x = Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider) ProtoMessage() {}

func (x *Provider) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider.ProtoReflect.Descriptor instead.
func (*Provider) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{16}
}

func (x *Provider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Provider) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Provider) GetOther() bool {
	if x != nil {
		return x.Other
	}
	return false
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPage uint32 `protobuf:"varint,1,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	TotalPage   uint32 `protobuf:"varint,2,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	PerPage     uint32 `protobuf:"varint,3,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	HasNextPage bool   `protobuf:"varint,4,opt,name=has_next_page,json=hasNextPage,proto3" json:"has_next_page,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{17}
}

func (x *Pagination) GetCurrentPage() uint32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *Pagination) GetTotalPage() uint32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *Pagination) GetPerPage() uint32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *Pagination) GetHasNextPage() bool {
	if x != nil {
		return x.HasNextPage
	}
	return false
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Large  string `protobuf:"bytes,1,opt,name=large,proto3" json:"large,omitempty"`
	Medium string `protobuf:"bytes,2,opt,name=medium,proto3" json:"medium,omitempty"`
	Small  string `protobuf:"bytes,3,opt,name=small,proto3" json:"small,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{18}
}

func (x *Image) GetLarge() string {
	if x != nil {
		return x.Large
	}
	return ""
}

func (x *Image) GetMedium() string {
	if x != nil {
		return x.Medium
	}
	return ""
}

func (x *Image) GetSmall() string {
	if x != nil {
		return x.Small
	}
	return ""
}

type Aired struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aired   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=aired,proto3" json:"aired,omitempty"`
	From    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Year    uint32                 `protobuf:"varint,4,opt,name=year,proto3" json:"year,omitempty"`
	EndYear uint32                 `protobuf:"varint,5,opt,name=endYear,proto3" json:"endYear,omitempty"`
}

func (x *Aired) Reset() {
	*x = Aired{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Aired) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aired) ProtoMessage() {}

func (x *Aired) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aired.ProtoReflect.Descriptor instead.
func (*Aired) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{19}
}

func (x *Aired) GetAired() *timestamppb.Timestamp {
	if x != nil {
		return x.Aired
	}
	return nil
}

func (x *Aired) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Aired) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Aired) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Aired) GetEndYear() uint32 {
	if x != nil {
		return x.EndYear
	}
	return 0
}

type NextAiringEpisode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AiringAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=airing_at,json=airingAt,proto3" json:"airing_at,omitempty"`
	Episode  uint32                 `protobuf:"varint,2,opt,name=episode,proto3" json:"episode,omitempty"`
	Season   uint32                 `protobuf:"varint,3,opt,name=season,proto3" json:"season,omitempty"`
	Name     string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *NextAiringEpisode) Reset() {
	*x = NextAiringEpisode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextAiringEpisode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextAiringEpisode) ProtoMessage() {}

func (x *NextAiringEpisode) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextAiringEpisode.ProtoReflect.Descriptor instead.
func (*NextAiringEpisode) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{20}
}

func (x *NextAiringEpisode) GetAiringAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AiringAt
	}
	return nil
}

func (x *NextAiringEpisode) GetEpisode() uint32 {
	if x != nil {
		return x.Episode
	}
	return 0
}

func (x *NextAiringEpisode) GetSeason() uint32 {
	if x != nil {
		return x.Season
	}
	return 0
}

func (x *NextAiringEpisode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PlaybackURL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Quality string `protobuf:"bytes,2,opt,name=quality,proto3" json:"quality,omitempty"`
	Url     string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *PlaybackURL) Reset() {
	*x = PlaybackURL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaybackURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaybackURL) ProtoMessage() {}

func (x *PlaybackURL) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaybackURL.ProtoReflect.Descriptor instead.
func (*PlaybackURL) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{21}
}

func (x *PlaybackURL) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PlaybackURL) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

func (x *PlaybackURL) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Video struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Adult        bool           `protobuf:"varint,1,opt,name=adult,proto3" json:"adult,omitempty"`
	Duration     string         `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Name         string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description  string         `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Thumbnail    *Image         `protobuf:"bytes,5,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	PlaybackUrls []*PlaybackURL `protobuf:"bytes,6,rep,name=playback_urls,json=playbackUrls,proto3" json:"playback_urls,omitempty"`
}

func (x *Video) Reset() {
	*x = Video{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Video) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Video) ProtoMessage() {}

func (x *Video) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Video.ProtoReflect.Descriptor instead.
func (*Video) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{22}
}

func (x *Video) GetAdult() bool {
	if x != nil {
		return x.Adult
	}
	return false
}

func (x *Video) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Video) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Video) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Video) GetThumbnail() *Image {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

func (x *Video) GetPlaybackUrls() []*PlaybackURL {
	if x != nil {
		return x.PlaybackUrls
	}
	return nil
}

type Quote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Character []string `protobuf:"bytes,1,rep,name=character,proto3" json:"character,omitempty"`
	Text      string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Quote) Reset() {
	*x = Quote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quote) ProtoMessage() {}

func (x *Quote) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quote.ProtoReflect.Descriptor instead.
func (*Quote) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{23}
}

func (x *Quote) GetCharacter() []string {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *Quote) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Quotes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quotes []*Quote `protobuf:"bytes,1,rep,name=quotes,proto3" json:"quotes,omitempty"`
}

func (x *Quotes) Reset() {
	*x = Quotes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quotes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quotes) ProtoMessage() {}

func (x *Quotes) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quotes.ProtoReflect.Descriptor instead.
func (*Quotes) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{24}
}

func (x *Quotes) GetQuotes() []*Quote {
	if x != nil {
		return x.Quotes
	}
	return nil
}

type AlternativeTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsoCode string `protobuf:"bytes,1,opt,name=iso_code,json=isoCode,proto3" json:"iso_code,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type    string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *AlternativeTitle) Reset() {
	*x = AlternativeTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlternativeTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlternativeTitle) ProtoMessage() {}

func (x *AlternativeTitle) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlternativeTitle.ProtoReflect.Descriptor instead.
func (*AlternativeTitle) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{25}
}

func (x *AlternativeTitle) GetIsoCode() string {
	if x != nil {
		return x.IsoCode
	}
	return ""
}

func (x *AlternativeTitle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AlternativeTitle) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type SoundTrack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text     string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Comments []string `protobuf:"bytes,2,rep,name=comments,proto3" json:"comments,omitempty"`
}

func (x *SoundTrack) Reset() {
	*x = SoundTrack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoundTrack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundTrack) ProtoMessage() {}

func (x *SoundTrack) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundTrack.ProtoReflect.Descriptor instead.
func (*SoundTrack) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{26}
}

func (x *SoundTrack) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SoundTrack) GetComments() []string {
	if x != nil {
		return x.Comments
	}
	return nil
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OriginCountry string `protobuf:"bytes,2,opt,name=origin_country,json=originCountry,proto3" json:"origin_country,omitempty"`
	Logo          *Image `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"`
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{27}
}

func (x *Company) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Company) GetOriginCountry() string {
	if x != nil {
		return x.OriginCountry
	}
	return ""
}

func (x *Company) GetLogo() *Image {
	if x != nil {
		return x.Logo
	}
	return nil
}

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description      string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Category         string `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Rank             int32  `protobuf:"varint,4,opt,name=rank,proto3" json:"rank,omitempty"`
	IsGeneralSpoiler bool   `protobuf:"varint,5,opt,name=is_general_spoiler,json=isGeneralSpoiler,proto3" json:"is_general_spoiler,omitempty"`
	IsMediaSpoiler   bool   `protobuf:"varint,6,opt,name=is_media_spoiler,json=isMediaSpoiler,proto3" json:"is_media_spoiler,omitempty"`
	Adult            bool   `protobuf:"varint,7,opt,name=adult,proto3" json:"adult,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{28}
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tag) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Tag) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Tag) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Tag) GetIsGeneralSpoiler() bool {
	if x != nil {
		return x.IsGeneralSpoiler
	}
	return false
}

func (x *Tag) GetIsMediaSpoiler() bool {
	if x != nil {
		return x.IsMediaSpoiler
	}
	return false
}

func (x *Tag) GetAdult() bool {
	if x != nil {
		return x.Adult
	}
	return false
}

type OfficialSite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *OfficialSite) Reset() {
	*x = OfficialSite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialSite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialSite) ProtoMessage() {}

func (x *OfficialSite) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialSite.ProtoReflect.Descriptor instead.
func (*OfficialSite) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{29}
}

func (x *OfficialSite) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OfficialSite) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type SpokenLanguage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iso_639_1   string `protobuf:"bytes,1,opt,name=iso_639_1,json=iso6391,proto3" json:"iso_639_1,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EnglishName string `protobuf:"bytes,3,opt,name=english_name,json=englishName,proto3" json:"english_name,omitempty"`
}

func (x *SpokenLanguage) Reset() {
	*x = SpokenLanguage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpokenLanguage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpokenLanguage) ProtoMessage() {}

func (x *SpokenLanguage) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpokenLanguage.ProtoReflect.Descriptor instead.
func (*SpokenLanguage) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{30}
}

func (x *SpokenLanguage) GetIso_639_1() string {
	if x != nil {
		return x.Iso_639_1
	}
	return ""
}

func (x *SpokenLanguage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpokenLanguage) GetEnglishName() string {
	if x != nil {
		return x.EnglishName
	}
	return ""
}

type Ranking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank    int32  `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`
	Type    string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Format  string `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	Year    int32  `protobuf:"varint,4,opt,name=year,proto3" json:"year,omitempty"`
	Season  string `protobuf:"bytes,5,opt,name=season,proto3" json:"season,omitempty"`
	AllTime bool   `protobuf:"varint,6,opt,name=all_time,json=allTime,proto3" json:"all_time,omitempty"`
	Context string `protobuf:"bytes,7,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *Ranking) Reset() {
	*x = Ranking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ranking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ranking) ProtoMessage() {}

func (x *Ranking) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ranking.ProtoReflect.Descriptor instead.
func (*Ranking) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{31}
}

func (x *Ranking) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Ranking) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Ranking) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *Ranking) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Ranking) GetSeason() string {
	if x != nil {
		return x.Season
	}
	return ""
}

func (x *Ranking) GetAllTime() bool {
	if x != nil {
		return x.AllTime
	}
	return false
}

func (x *Ranking) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

type RecommendedMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              map[string]string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Titles          map[string]string `protobuf:"bytes,2,rep,name=titles,proto3" json:"titles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Image           *Image            `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Score           float64           `protobuf:"fixed64,4,opt,name=score,proto3" json:"score,omitempty"`
	Duration        string            `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Genres          []string          `protobuf:"bytes,6,rep,name=genres,proto3" json:"genres,omitempty"`
	CanHaveEpisodes bool              `protobuf:"varint,7,opt,name=canHaveEpisodes,proto3" json:"canHaveEpisodes,omitempty"`
}

func (x *RecommendedMedia) Reset() {
	*x = RecommendedMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendedMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendedMedia) ProtoMessage() {}

func (x *RecommendedMedia) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendedMedia.ProtoReflect.Descriptor instead.
func (*RecommendedMedia) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{32}
}

func (x *RecommendedMedia) GetId() map[string]string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RecommendedMedia) GetTitles() map[string]string {
	if x != nil {
		return x.Titles
	}
	return nil
}

func (x *RecommendedMedia) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *RecommendedMedia) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *RecommendedMedia) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *RecommendedMedia) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *RecommendedMedia) GetCanHaveEpisodes() bool {
	if x != nil {
		return x.CanHaveEpisodes
	}
	return false
}

type Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Titles   map[string]string `protobuf:"bytes,2,rep,name=titles,proto3" json:"titles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Category string            `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *Connection) Reset() {
	*x = Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{33}
}

func (x *Connection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Connection) GetTitles() map[string]string {
	if x != nil {
		return x.Titles
	}
	return nil
}

func (x *Connection) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type BelongsToCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              map[string]string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Name            string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image           *Image            `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	BackgroundImage *Image            `protobuf:"bytes,4,opt,name=background_image,json=backgroundImage,proto3" json:"background_image,omitempty"`
}

func (x *BelongsToCollection) Reset() {
	*x = BelongsToCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BelongsToCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BelongsToCollection) ProtoMessage() {}

func (x *BelongsToCollection) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BelongsToCollection.ProtoReflect.Descriptor instead.
func (*BelongsToCollection) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{34}
}

func (x *BelongsToCollection) GetId() map[string]string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BelongsToCollection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BelongsToCollection) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *BelongsToCollection) GetBackgroundImage() *Image {
	if x != nil {
		return x.BackgroundImage
	}
	return nil
}

type Crew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Adult              bool              `protobuf:"varint,1,opt,name=adult,proto3" json:"adult,omitempty"`
	Gender             string            `protobuf:"bytes,2,opt,name=gender,proto3" json:"gender,omitempty"`
	Id                 map[string]string `protobuf:"bytes,3,rep,name=id,proto3" json:"id,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	KnownForDepartment string            `protobuf:"bytes,4,opt,name=known_for_department,json=knownForDepartment,proto3" json:"known_for_department,omitempty"`
	Names              map[string]string `protobuf:"bytes,5,rep,name=names,proto3" json:"names,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Profile            *Image            `protobuf:"bytes,6,opt,name=profile,proto3" json:"profile,omitempty"`
	Department         string            `protobuf:"bytes,7,opt,name=department,proto3" json:"department,omitempty"`
	Job                []string          `protobuf:"bytes,8,rep,name=job,proto3" json:"job,omitempty"`
}

func (x *Crew) Reset() {
	*x = Crew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Crew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Crew) ProtoMessage() {}

func (x *Crew) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Crew.ProtoReflect.Descriptor instead.
func (*Crew) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{35}
}

func (x *Crew) GetAdult() bool {
	if x != nil {
		return x.Adult
	}
	return false
}

func (x *Crew) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Crew) GetId() map[string]string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Crew) GetKnownForDepartment() string {
	if x != nil {
		return x.KnownForDepartment
	}
	return ""
}

func (x *Crew) GetNames() map[string]string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *Crew) GetProfile() *Image {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Crew) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *Crew) GetJob() []string {
	if x != nil {
		return x.Job
	}
	return nil
}

type Cast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Adult              bool              `protobuf:"varint,1,opt,name=adult,proto3" json:"adult,omitempty"`
	Gender             string            `protobuf:"bytes,2,opt,name=gender,proto3" json:"gender,omitempty"`
	Id                 map[string]string `protobuf:"bytes,3,rep,name=id,proto3" json:"id,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	KnownForDepartment string            `protobuf:"bytes,4,opt,name=known_for_department,json=knownForDepartment,proto3" json:"known_for_department,omitempty"`
	Names              map[string]string `protobuf:"bytes,5,rep,name=names,proto3" json:"names,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Profile            *Image            `protobuf:"bytes,6,opt,name=profile,proto3" json:"profile,omitempty"`
	CastId             map[string]string `protobuf:"bytes,7,rep,name=cast_id,json=castId,proto3" json:"cast_id,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Character          string            `protobuf:"bytes,8,opt,name=character,proto3" json:"character,omitempty"`
}

func (x *Cast) Reset() {
	*x = Cast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scraper_scraper_common_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cast) ProtoMessage() {}

func (x *Cast) ProtoReflect() protoreflect.Message {
	mi := &file_scraper_scraper_common_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cast.ProtoReflect.Descriptor instead.
func (*Cast) Descriptor() ([]byte, []int) {
	return file_scraper_scraper_common_proto_rawDescGZIP(), []int{36}
}

func (x *Cast) GetAdult() bool {
	if x != nil {
		return x.Adult
	}
	return false
}

func (x *Cast) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Cast) GetId() map[string]string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Cast) GetKnownForDepartment() string {
	if x != nil {
		return x.KnownForDepartment
	}
	return ""
}

func (x *Cast) GetNames() map[string]string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *Cast) GetProfile() *Image {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Cast) GetCastId() map[string]string {
	if x != nil {
		return x.CastId
	}
	return nil
}

func (x *Cast) GetCharacter() string {
	if x != nil {
		return x.Character
	}
	return ""
}

var File_scraper_scraper_common_proto protoreflect.FileDescriptor

var file_scraper_scraper_common_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2f, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13,
	0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61,
	0x70, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2f, 0x73, 0x63,
	0x72, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x94, 0x01, 0x0a, 0x06, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41,
	0x74, 0x22, 0x48, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65,
	0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x0b,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63,
	0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70,
	0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0xdb, 0x01, 0x0a,
	0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x63, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x69, 0x6e, 0x65,
	0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x73, 0x1a, 0x64, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61,
	0x70, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x95, 0x01, 0x0a, 0x06, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6d, 0x33,
	0x75, 0x38, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4d, 0x33, 0x75, 0x38,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x22, 0x44, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x2f, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x57, 0x0a, 0x0e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x98, 0x04, 0x0a, 0x0f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61,
	0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x3b, 0x0a,
	0x09, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73,
	0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x52,
	0x09, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76,
	0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x46, 0x6c, 0x61,
	0x67, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61,
	0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x72, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x30, 0x0a, 0x05, 0x6f, 0x75,
	0x74, 0x72, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x69, 0x6e, 0x65,
	0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x75, 0x74, 0x72, 0x6f, 0x12, 0x5d, 0x0a, 0x0d,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75,
	0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x40, 0x0a, 0x12, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xac, 0x01,
	0x0a, 0x0b, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x04,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x2f, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61,
	0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x46, 0x6c,
	0x61, 0x67, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x86, 0x02, 0x0a, 0x10, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x69,
	0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65,
	0x72, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x06, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x35,
	0x0a, 0x08, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73,
	0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x08, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a,
	0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75,
	0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x22, 0x8a, 0x01, 0x0a, 0x0b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x22,
	0x59, 0x0a, 0x0d, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e,
	0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4a, 0x0a, 0x08, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3e, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77,
	0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x44, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x22, 0x8d, 0x01, 0x0a,
	0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x5f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x05,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x64, 0x69, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x64,
	0x69, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x22, 0xc3, 0x01, 0x0a, 0x05, 0x41, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x69, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05,
	0x61, 0x69, 0x72, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x59, 0x65, 0x61, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x59, 0x65, 0x61, 0x72, 0x22,
	0x92, 0x01, 0x0a, 0x11, 0x4e, 0x65, 0x78, 0x74, 0x41, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x70,
	0x69, 0x73, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x61, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0xf0, 0x01, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x64, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64,
	0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77,
	0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12,
	0x45, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76,
	0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x52, 0x4c, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x55, 0x72, 0x6c, 0x73, 0x22, 0x39, 0x0a, 0x05, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x22, 0x3c, 0x0a, 0x06, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x69,
	0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65,
	0x72, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x22,
	0x57, 0x0a, 0x10, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3c, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x6e,
	0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x74, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x04,
	0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x69, 0x6e,
	0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x22, 0xd9, 0x01, 0x0a,
	0x03, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73,
	0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x73, 0x70, 0x6f, 0x69, 0x6c, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x53, 0x70, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x5f, 0x73, 0x70, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x70, 0x6f, 0x69, 0x6c,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x61, 0x64, 0x75, 0x6c, 0x74, 0x22, 0x34, 0x0a, 0x0c, 0x4f, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x63,
	0x0a, 0x0e, 0x53, 0x70, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x09, 0x69, 0x73, 0x6f, 0x5f, 0x36, 0x33, 0x39, 0x5f, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x6f, 0x36, 0x33, 0x39, 0x31, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x07, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72,
	0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79,
	0x65, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x6c, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61,
	0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x22, 0xb4, 0x03, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x3d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e,
	0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68,
	0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x12,
	0x30, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72,
	0x61, 0x70, 0x65, 0x72, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63,
	0x61, 0x6e, 0x48, 0x61, 0x76, 0x65, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x48, 0x61, 0x76, 0x65, 0x45, 0x70, 0x69,
	0x73, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0x35, 0x0a, 0x07, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb8, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76,
	0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x1a, 0x39, 0x0a, 0x0b, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x9b, 0x02, 0x0a, 0x13, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x54, 0x6f,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76,
	0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x42, 0x65, 0x6c,
	0x6f, 0x6e, 0x67, 0x73, 0x54, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x30, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63,
	0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70,
	0x65, 0x72, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x1a, 0x35, 0x0a, 0x07, 0x49, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xae, 0x03, 0x0a, 0x04, 0x43, 0x72, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x75, 0x6c, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75,
	0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x2e, 0x49,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46,
	0x6f, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x05,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x69,
	0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65,
	0x72, 0x2e, 0x43, 0x72, 0x65, 0x77, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x69, 0x6e, 0x65,
	0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62,
	0x1a, 0x35, 0x0a, 0x07, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x38, 0x0a, 0x0a, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x95, 0x04, 0x0a, 0x04, 0x43, 0x61, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x75, 0x6c, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68,
	0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x2e,
	0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x46, 0x6f, 0x72, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a,
	0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63,
	0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70,
	0x65, 0x72, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x69, 0x6e,
	0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x3e, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x73,
	0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x73, 0x74,
	0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x61, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x1a, 0x35, 0x0a,
	0x07, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x38, 0x0a, 0x0a, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39,
	0x0a, 0x0b, 0x43, 0x61, 0x73, 0x74, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x75, 0x62, 0x68, 0x61, 0x6d, 0x37,
	0x31, 0x30, 0x31, 0x2f, 0x63, 0x69, 0x6e, 0x65, 0x77, 0x61, 0x76, 0x65, 0x68, 0x75, 0x62, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scraper_scraper_common_proto_rawDescOnce sync.Once
	file_scraper_scraper_common_proto_rawDescData = file_scraper_scraper_common_proto_rawDesc
)

func file_scraper_scraper_common_proto_rawDescGZIP() []byte {
	file_scraper_scraper_common_proto_rawDescOnce.Do(func() {
		file_scraper_scraper_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_scraper_scraper_common_proto_rawDescData)
	})
	return file_scraper_scraper_common_proto_rawDescData
}

var file_scraper_scraper_common_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_scraper_scraper_common_proto_goTypes = []any{
	(*Empty)(nil),                 // 0: cinewavehub.scraper.Empty
	(*Server)(nil),                // 1: cinewavehub.scraper.Server
	(*ServersResponse)(nil),       // 2: cinewavehub.scraper.ServersResponse
	(*ServersInfo)(nil),           // 3: cinewavehub.scraper.ServersInfo
	(*ServerMappings)(nil),        // 4: cinewavehub.scraper.ServerMappings
	(*Source)(nil),                // 5: cinewavehub.scraper.Source
	(*Subtitle)(nil),              // 6: cinewavehub.scraper.Subtitle
	(*Timer)(nil),                 // 7: cinewavehub.scraper.Timer
	(*SourcesRequest)(nil),        // 8: cinewavehub.scraper.SourcesRequest
	(*SourcesResponse)(nil),       // 9: cinewavehub.scraper.SourcesResponse
	(*VideoDetail)(nil),           // 10: cinewavehub.scraper.VideoDetail
	(*Link)(nil),                  // 11: cinewavehub.scraper.Link
	(*DownloadResponse)(nil),      // 12: cinewavehub.scraper.DownloadResponse
	(*MappingInfo)(nil),           // 13: cinewavehub.scraper.MappingInfo
	(*MappingsEntry)(nil),         // 14: cinewavehub.scraper.MappingsEntry
	(*Mappings)(nil),              // 15: cinewavehub.scraper.Mappings
	(*Provider)(nil),              // 16: cinewavehub.scraper.Provider
	(*Pagination)(nil),            // 17: cinewavehub.scraper.Pagination
	(*Image)(nil),                 // 18: cinewavehub.scraper.Image
	(*Aired)(nil),                 // 19: cinewavehub.scraper.Aired
	(*NextAiringEpisode)(nil),     // 20: cinewavehub.scraper.NextAiringEpisode
	(*PlaybackURL)(nil),           // 21: cinewavehub.scraper.PlaybackURL
	(*Video)(nil),                 // 22: cinewavehub.scraper.Video
	(*Quote)(nil),                 // 23: cinewavehub.scraper.Quote
	(*Quotes)(nil),                // 24: cinewavehub.scraper.Quotes
	(*AlternativeTitle)(nil),      // 25: cinewavehub.scraper.AlternativeTitle
	(*SoundTrack)(nil),            // 26: cinewavehub.scraper.SoundTrack
	(*Company)(nil),               // 27: cinewavehub.scraper.Company
	(*Tag)(nil),                   // 28: cinewavehub.scraper.Tag
	(*OfficialSite)(nil),          // 29: cinewavehub.scraper.OfficialSite
	(*SpokenLanguage)(nil),        // 30: cinewavehub.scraper.SpokenLanguage
	(*Ranking)(nil),               // 31: cinewavehub.scraper.Ranking
	(*RecommendedMedia)(nil),      // 32: cinewavehub.scraper.RecommendedMedia
	(*Connection)(nil),            // 33: cinewavehub.scraper.Connection
	(*BelongsToCollection)(nil),   // 34: cinewavehub.scraper.BelongsToCollection
	(*Crew)(nil),                  // 35: cinewavehub.scraper.Crew
	(*Cast)(nil),                  // 36: cinewavehub.scraper.Cast
	nil,                           // 37: cinewavehub.scraper.ServerMappings.ServersMappingsEntry
	nil,                           // 38: cinewavehub.scraper.SourcesResponse.ProxySettingsEntry
	nil,                           // 39: cinewavehub.scraper.RecommendedMedia.IdEntry
	nil,                           // 40: cinewavehub.scraper.RecommendedMedia.TitlesEntry
	nil,                           // 41: cinewavehub.scraper.Connection.TitlesEntry
	nil,                           // 42: cinewavehub.scraper.BelongsToCollection.IdEntry
	nil,                           // 43: cinewavehub.scraper.Crew.IdEntry
	nil,                           // 44: cinewavehub.scraper.Crew.NamesEntry
	nil,                           // 45: cinewavehub.scraper.Cast.IdEntry
	nil,                           // 46: cinewavehub.scraper.Cast.NamesEntry
	nil,                           // 47: cinewavehub.scraper.Cast.CastIdEntry
	(*timestamppb.Timestamp)(nil), // 48: google.protobuf.Timestamp
	(Flag)(0),                     // 49: cinewavehub.scraper.Flag
}
var file_scraper_scraper_common_proto_depIdxs = []int32{
	48, // 0: cinewavehub.scraper.Server.expires_at:type_name -> google.protobuf.Timestamp
	1,  // 1: cinewavehub.scraper.ServersResponse.servers:type_name -> cinewavehub.scraper.Server
	2,  // 2: cinewavehub.scraper.ServersInfo.servers:type_name -> cinewavehub.scraper.ServersResponse
	48, // 3: cinewavehub.scraper.ServersInfo.expires_at:type_name -> google.protobuf.Timestamp
	37, // 4: cinewavehub.scraper.ServerMappings.servers_mappings:type_name -> cinewavehub.scraper.ServerMappings.ServersMappingsEntry
	5,  // 5: cinewavehub.scraper.SourcesResponse.sources:type_name -> cinewavehub.scraper.Source
	6,  // 6: cinewavehub.scraper.SourcesResponse.subtitles:type_name -> cinewavehub.scraper.Subtitle
	49, // 7: cinewavehub.scraper.SourcesResponse.flags:type_name -> cinewavehub.scraper.Flag
	7,  // 8: cinewavehub.scraper.SourcesResponse.intro:type_name -> cinewavehub.scraper.Timer
	7,  // 9: cinewavehub.scraper.SourcesResponse.outro:type_name -> cinewavehub.scraper.Timer
	38, // 10: cinewavehub.scraper.SourcesResponse.ProxySettings:type_name -> cinewavehub.scraper.SourcesResponse.ProxySettingsEntry
	49, // 11: cinewavehub.scraper.Link.flags:type_name -> cinewavehub.scraper.Flag
	11, // 12: cinewavehub.scraper.DownloadResponse.direct:type_name -> cinewavehub.scraper.Link
	11, // 13: cinewavehub.scraper.DownloadResponse.external:type_name -> cinewavehub.scraper.Link
	10, // 14: cinewavehub.scraper.DownloadResponse.video_detail:type_name -> cinewavehub.scraper.VideoDetail
	13, // 15: cinewavehub.scraper.MappingsEntry.value:type_name -> cinewavehub.scraper.MappingInfo
	14, // 16: cinewavehub.scraper.Mappings.mappings:type_name -> cinewavehub.scraper.MappingsEntry
	48, // 17: cinewavehub.scraper.Aired.aired:type_name -> google.protobuf.Timestamp
	48, // 18: cinewavehub.scraper.Aired.from:type_name -> google.protobuf.Timestamp
	48, // 19: cinewavehub.scraper.Aired.to:type_name -> google.protobuf.Timestamp
	48, // 20: cinewavehub.scraper.NextAiringEpisode.airing_at:type_name -> google.protobuf.Timestamp
	18, // 21: cinewavehub.scraper.Video.thumbnail:type_name -> cinewavehub.scraper.Image
	21, // 22: cinewavehub.scraper.Video.playback_urls:type_name -> cinewavehub.scraper.PlaybackURL
	23, // 23: cinewavehub.scraper.Quotes.quotes:type_name -> cinewavehub.scraper.Quote
	18, // 24: cinewavehub.scraper.Company.logo:type_name -> cinewavehub.scraper.Image
	39, // 25: cinewavehub.scraper.RecommendedMedia.id:type_name -> cinewavehub.scraper.RecommendedMedia.IdEntry
	40, // 26: cinewavehub.scraper.RecommendedMedia.titles:type_name -> cinewavehub.scraper.RecommendedMedia.TitlesEntry
	18, // 27: cinewavehub.scraper.RecommendedMedia.image:type_name -> cinewavehub.scraper.Image
	41, // 28: cinewavehub.scraper.Connection.titles:type_name -> cinewavehub.scraper.Connection.TitlesEntry
	42, // 29: cinewavehub.scraper.BelongsToCollection.id:type_name -> cinewavehub.scraper.BelongsToCollection.IdEntry
	18, // 30: cinewavehub.scraper.BelongsToCollection.image:type_name -> cinewavehub.scraper.Image
	18, // 31: cinewavehub.scraper.BelongsToCollection.background_image:type_name -> cinewavehub.scraper.Image
	43, // 32: cinewavehub.scraper.Crew.id:type_name -> cinewavehub.scraper.Crew.IdEntry
	44, // 33: cinewavehub.scraper.Crew.names:type_name -> cinewavehub.scraper.Crew.NamesEntry
	18, // 34: cinewavehub.scraper.Crew.profile:type_name -> cinewavehub.scraper.Image
	45, // 35: cinewavehub.scraper.Cast.id:type_name -> cinewavehub.scraper.Cast.IdEntry
	46, // 36: cinewavehub.scraper.Cast.names:type_name -> cinewavehub.scraper.Cast.NamesEntry
	18, // 37: cinewavehub.scraper.Cast.profile:type_name -> cinewavehub.scraper.Image
	47, // 38: cinewavehub.scraper.Cast.cast_id:type_name -> cinewavehub.scraper.Cast.CastIdEntry
	3,  // 39: cinewavehub.scraper.ServerMappings.ServersMappingsEntry.value:type_name -> cinewavehub.scraper.ServersInfo
	40, // [40:40] is the sub-list for method output_type
	40, // [40:40] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_scraper_scraper_common_proto_init() }
func file_scraper_scraper_common_proto_init() {
	if File_scraper_scraper_common_proto != nil {
		return
	}
	file_scraper_scraper_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_scraper_scraper_common_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ServersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ServersInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ServerMappings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Subtitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Timer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*VideoDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*DownloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*MappingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*MappingsEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*Mappings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*Aired); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*NextAiringEpisode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*PlaybackURL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*Video); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*Quote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*Quotes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*AlternativeTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*SoundTrack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*OfficialSite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*SpokenLanguage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*Ranking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*RecommendedMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*BelongsToCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*Crew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scraper_scraper_common_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*Cast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scraper_scraper_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_scraper_scraper_common_proto_goTypes,
		DependencyIndexes: file_scraper_scraper_common_proto_depIdxs,
		MessageInfos:      file_scraper_scraper_common_proto_msgTypes,
	}.Build()
	File_scraper_scraper_common_proto = out.File
	file_scraper_scraper_common_proto_rawDesc = nil
	file_scraper_scraper_common_proto_goTypes = nil
	file_scraper_scraper_common_proto_depIdxs = nil
}
